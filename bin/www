require('babel-core/register');
require('babel-polyfill');

const http = require('http');
const {port} = require('../server/config/index');
const app = require('../server/index.js');

const server = http.createServer(app);
server.listen(port, () => {
	console.log(`App started`);
});

server.on('error', onError);
server.on('listening', onListening);
process.on('uncaughtException', error => console.error('uncaught exception:', error));
process.on('unhandledRejection', error => console.error('unhandled rejection:', error));

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    const bind = typeof port === 'string'
        ? 'Pipe ' + port
        : 'Port ' + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    const address = server.address();
    const bind = typeof address === 'string'
        ? 'pipe ' + address
        : 'port ' + address.port;
    console.log('Listening on ' + bind);
}