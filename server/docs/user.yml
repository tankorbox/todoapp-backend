openapi: 3.0.0
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
securityDefinitions:
  bearerAuth:
    type: apiKey
    name: Authorization
    in: header
    description: Requests should pass a token header.
paths:
  /users:
    summary: Get user's information
    x-swagger-router-controller: user
    get:
      tags:
      - "users"
      security:
        - bearerAuth: []
      description: Get a User
      operationId: getUser
      responses:
        200:
          description: An information of user
    put:
      tags:
      - "users"
      security:
        - bearerAuth: []
      description: Update user
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: displayName
          type: string
          in: formData
          description: displayName
        - name: password
          type: string
          in: formData
          description: User's password
        - name: avatar
          type: string
          in: formData
          description: User's avatar
      operationId: update user
      responses:
        200:
          description: Update User
    post:
      tags:
      - "users"
      security:
        - bearerAuth: []
      description: create new user
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: username
          type: string
          in: formData
          required: true
          description: Email Address
        - name: password
          type: string
          in: formData
          required: true
          description: At least 8 characters, includes 0-9 A-Z a-z
        - name: displayName
          type: string
          in: formData
          required: true
          description: No more than 20 characters
      operationId: create user
      responses:
        200:
          description: created new user
  /users/{id}:
    summary: interact with specific person
    x-swagger-router-controller: user
    delete:
      tags:
      - "users"
      security:
        - bearerAuth: []
      description: delete user by id
      parameters:
      operationId: delete user
      responses:
        200:
          description: deleted user
  /users/upload-avatar:
    summary: upload avatar
    x-swagger-router-controller: user
    post:
      tags:
      - "users"
      security:
        - bearerAuth: []
      description: upload an avatar
      produces:
        - multipart/form-data
      comsumes:
        - multipart/form-data
      parameters:
        - name: file
          type: file
          in: formData
          required: true
          description: Upload 600x600 image file (less than 5mb)
      operationId: upload avatar
      responses:
        200:
          description: Avatar uploaded
  /users/avatar/{avatarId}:
    summary: retrieve avatar
    x-swagger-router-controller: user
    post:
      tags:
      - "users"
      security:
        - bearerAuth: []
      description: retrieve an avatar
      parameters:
      operationId: retrieve avatar
      responses:
        200:
          description: retrieved avatar
  /users/change-password:
    summary: change user password
    x-swagger-router-controller: user
    put:
      tags:
      - "users"
      security:
        - bearerAuth: []
      description: change user password
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: oldPassword
          type: string
          in: formData
          required: true
        - name: newPassword
          type: string
          in: formData
          required: true
      operationId: changePassword
      responses:
        200:
          description: Password changed
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "string"
        format: "UUID"
      username:
        type: "string"
      password:
        type: "string"
      displayName:
        type: "string"
      role:
        type: "string"
        description: "Order Status"
        enum:
        - "normal"
        - "admin"
      avatar:
        type: "string"
      isActive:
        type: "boolean"
        default: true
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      deletedAt:
        type: string
        format: date-time
    xml:
      name: "User"